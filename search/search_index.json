{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Code Tabs Extension Documentation Migrating from an older version? Check out our Release notes . Overview Code Tabs is an extension that generates a HTML structure for consecutive fenced code blocks content. It provides four features: The ability to choose the HTML template. The ability to specify custom label for a tab. The ability to enable tab generation for a single fenced code block. The ability to specify the css class for the tab active state. Example: ``` c printf( HELLO WORLD! ); ``` ``` java System.out.println( HELLO WORLD! ); ``` ``` python print( HELLO WORLD! ) ``` Result: C printf ( HELLO WORLD! ); Java System . out . println ( HELLO WORLD! ); Python print ( HELLO WORLD! ) Installation Installation is easy with pip: pip install markdown-fenced-code-tabs If you want to manually install it, run python setup.py build and python setup.py install . You should be able to access the extensions in Python Markdown. If you would like to modify the code, you can install it via: python setup.py develop . This method will allow you to instantly see your changes without reinstalling. Usage In order to enable the extension just add it to your markdown_extensions list: markdown_extensions : - markdown_fenced_code_tabs This will add the extension with the default options . To configure them: markdown_extensions : - markdown_fenced_code_tabs : single_block_as_tab : False active_class : active template : default Important If you choose the default template you wiLl have to add the needed css as explained in the templates documentation . Label customization By default the tab label is the language of the code block but it can be customized by passing the title to the fct_label argument placed right after the language identifier. Example: ``` python fct_label= Python 2 print Bonjour ``` ``` python fct_label= Python 3 print( Bonjour ) ``` Result: Python 2 print Bonjour Python 3 print ( Bonjour ) Options The following options are provided to configure the output: Option Type Default Description single_block_as_tab bool False Renders a single fenced code block as a tab. active_class string active Class name is applied to the active tab. template string default A string that specifies which HTML template should be used default , bootstrap3 , or bootstrap4 .","title":"Getting Started"},{"location":"#code-tabs-extension-documentation","text":"Migrating from an older version? Check out our Release notes .","title":"Code Tabs Extension Documentation"},{"location":"#overview","text":"Code Tabs is an extension that generates a HTML structure for consecutive fenced code blocks content. It provides four features: The ability to choose the HTML template. The ability to specify custom label for a tab. The ability to enable tab generation for a single fenced code block. The ability to specify the css class for the tab active state. Example: ``` c printf( HELLO WORLD! ); ``` ``` java System.out.println( HELLO WORLD! ); ``` ``` python print( HELLO WORLD! ) ``` Result: C printf ( HELLO WORLD! ); Java System . out . println ( HELLO WORLD! ); Python print ( HELLO WORLD! )","title":"Overview"},{"location":"#installation","text":"Installation is easy with pip: pip install markdown-fenced-code-tabs If you want to manually install it, run python setup.py build and python setup.py install . You should be able to access the extensions in Python Markdown. If you would like to modify the code, you can install it via: python setup.py develop . This method will allow you to instantly see your changes without reinstalling.","title":"Installation"},{"location":"#usage","text":"In order to enable the extension just add it to your markdown_extensions list: markdown_extensions : - markdown_fenced_code_tabs This will add the extension with the default options . To configure them: markdown_extensions : - markdown_fenced_code_tabs : single_block_as_tab : False active_class : active template : default Important If you choose the default template you wiLl have to add the needed css as explained in the templates documentation .","title":"Usage"},{"location":"#label-customization","text":"By default the tab label is the language of the code block but it can be customized by passing the title to the fct_label argument placed right after the language identifier. Example: ``` python fct_label= Python 2 print Bonjour ``` ``` python fct_label= Python 3 print( Bonjour ) ``` Result: Python 2 print Bonjour Python 3 print ( Bonjour )","title":"Label customization"},{"location":"#options","text":"The following options are provided to configure the output: Option Type Default Description single_block_as_tab bool False Renders a single fenced code block as a tab. active_class string active Class name is applied to the active tab. template string default A string that specifies which HTML template should be used default , bootstrap3 , or bootstrap4 .","title":"Options"},{"location":"contributing/","text":"First off, thanks for taking the time to contribute! It's people like you that make the open source community such a great community! \ud83d\ude0a Any type of contribution is welcome, not only code. You can help with QA : file bug reports, the more details you can give the better (e.g. screenshots with the console open) Code : take a look at the open issues . Even if you can't write code, commenting on them, showing that you care about a given issue matters. It helps us triage them. Your First Contribution Working on your first Pull Request? You can learn how from this free series, How to Contribute to an Open Source Project on GitHub . Submitting code Any code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests. Code review process The bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge. It is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you? Questions If you have any questions or found a bug in the source code, create an issue (protip: do a quick search first to see if someone else didn't ask the same question before!).","title":"Contributing & Support"},{"location":"contributing/#your-first-contribution","text":"Working on your first Pull Request? You can learn how from this free series, How to Contribute to an Open Source Project on GitHub .","title":"Your First Contribution"},{"location":"contributing/#submitting-code","text":"Any code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.","title":"Submitting code"},{"location":"contributing/#code-review-process","text":"The bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge. It is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?","title":"Code review process"},{"location":"contributing/#questions","text":"If you have any questions or found a bug in the source code, create an issue (protip: do a quick search first to see if someone else didn't ask the same question before!).","title":"Questions"},{"location":"licence/","text":"MIT License Copyright \u00a9 2017-present Yassir Barchi Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licence"},{"location":"release-notes/","text":"Upgrading To upgrade Code Tabs to the latest version, use pip : pip install --upgrade markdown-fenced-code-tabs To inspect the currently installed version, use the following command: pip show markdown-fenced-code-tabs Code Tabs 0.x to 1.x The 0.x generates exclusively a Bootstrap 3 based template. Starting from the 1.x, you can choose the rendering template . To keep everything working smoothly, you need to choose the bootstrap3 template: markdown_extensions : - markdown_fenced_code_tabs : template : bootstrap3 Changelog 1.0.4 _ Nov 14, 2018 FIX : Build failure due to markdown 3+ package breaking change . 1.0.3 _ May 27, 2018 Avoid adding the div class=\"md-fenced-code-tabs\" /div structure for single code blocks if the single_block_as_tab option is True . 1.0.2 _ May 27, 2018 FIX : Fixed the Bootsrap templates 1.0.1 _ May 25, 2018 FIX : Fixed the missing resources 1.0.0 _ May 25, 2018 NEW : Added the active_class option support in the configuration NEW : Added the template option support in the configuration FIX : Fixed the tab id issue for code blocks with same language #12 0.2.0 _ June 16, 2017 Added the custom tab label option Fixed the missing active class of the first tab Fixed the missing string import 0.1.0 _ March 1, 2017 Initial release","title":"Release Notes"},{"location":"release-notes/#upgrading","text":"To upgrade Code Tabs to the latest version, use pip : pip install --upgrade markdown-fenced-code-tabs To inspect the currently installed version, use the following command: pip show markdown-fenced-code-tabs","title":"Upgrading"},{"location":"release-notes/#code-tabs-0x-to-1x","text":"The 0.x generates exclusively a Bootstrap 3 based template. Starting from the 1.x, you can choose the rendering template . To keep everything working smoothly, you need to choose the bootstrap3 template: markdown_extensions : - markdown_fenced_code_tabs : template : bootstrap3","title":"Code Tabs 0.x to 1.x"},{"location":"release-notes/#changelog","text":"","title":"Changelog"},{"location":"release-notes/#104-_-nov-14-2018","text":"FIX : Build failure due to markdown 3+ package breaking change .","title":"1.0.4 _ Nov 14, 2018"},{"location":"release-notes/#103-_-may-27-2018","text":"Avoid adding the div class=\"md-fenced-code-tabs\" /div structure for single code blocks if the single_block_as_tab option is True .","title":"1.0.3 _ May 27, 2018"},{"location":"release-notes/#102-_-may-27-2018","text":"FIX : Fixed the Bootsrap templates","title":"1.0.2 _ May 27, 2018"},{"location":"release-notes/#101-_-may-25-2018","text":"FIX : Fixed the missing resources","title":"1.0.1 _ May 25, 2018"},{"location":"release-notes/#100-_-may-25-2018","text":"NEW : Added the active_class option support in the configuration NEW : Added the template option support in the configuration FIX : Fixed the tab id issue for code blocks with same language #12","title":"1.0.0 _ May 25, 2018"},{"location":"release-notes/#020-_-june-16-2017","text":"Added the custom tab label option Fixed the missing active class of the first tab Fixed the missing string import","title":"0.2.0 _ June 16, 2017"},{"location":"release-notes/#010-_-march-1-2017","text":"Initial release","title":"0.1.0 _ March 1, 2017"},{"location":"templates/","text":"The Code Tabs extension allows you to choose one of the following three rendering templates. Default The default template is dependency free and needs only CSS only to work fine. Configuration markdown_extensions : - markdown_fenced_code_tabs : template : default Here is the basic CSS that can be used. . md-fenced-code-tabs * { box-sizing : border-box ; } . md-fenced-code-tabs { display : flex ; position : relative ; flex-wrap : wrap ; width : 100 % ; } . md-fenced-code-tabs input { position : absolute ; opacity : 0 ; } . md-fenced-code-tabs label { width : auto ; padding : 4 px ; margin : 0 8 px ; cursor : pointer ; color : #aaa ; } . md-fenced-code-tabs input : checked + label { color : #333 ; } . md-fenced-code-tabs . code-tabpanel { display : none ; width : 100 % ; margin-top : 10 px ; order : 99 ; } . md-fenced-code-tabs input : checked + label + . code-tabpanel { display : block ; } . md-fenced-code-tabs pre , . md-fenced-code-tabs . codehilite { width : 100 % ; margin : 0 px ; } Tip Take a look to the code-tabs css of this current documentation Generated HTML For each code block, the generated HTML code will be: input class = code-tab role = tab type = radio name = ${group-id} id = ${group-id}-${index}_${language-1} data-lang = ${language-1} aria-controls = ${group-id}-${index}_${language-1}-panel label class = code-tab-label for = ${group-id}-${index}_${language-1} data-lang = ${language-1} id = ${group-id}-${index}_${language-1}-label Label 1 / label div class = code-tabpanel role = tabpanel data-lang = ${language-1} id = ${group-id}-${index}_${language-1}-panel aria-labelledby = ${group-id}-${index}_${language-1}-label Code 1 / div Exemple: ``` c printf( HELLO WORLD! ); ``` ``` java System.out.println( HELLO WORLD! ); ``` Result: div class = md-fenced-code-tabs id = tab-tab-group-4 input name = tab-group-4 type = radio id = tab-group-4-0_c checked = checked class = code-tab data-lang = c aria-controls = tab-group-4-0_c-panel role = tab label for = tab-group-4-0_c class = code-tab-label data-lang = c id = tab-group-4-0_c-label C / label div class = code-tabpanel role = tabpanel data-lang = c id = tab-group-4-0_c-panel aria-labelledby = tab-group-4-0_c-label ... the highlighted syntax ... / div input name = tab-group-4 type = radio id = tab-group-4-1_java class = code-tab data-lang = java aria-controls = tab-group-4-1_java-panel role = tab label for = tab-group-4-1_java class = code-tab-label data-lang = java id = tab-group-4-1_java-label Java / label div class = code-tabpanel role = tabpanel data-lang = java id = tab-group-4-1_java-panel aria-labelledby = tab-group-4-1_java-label ... the highlighted syntax ... / div / div Bootsrapt If you're using a Bootstrap based theme, the only thing you'll need to is choosing the right template option depending on the Bootstrap version of you're theme. Bootsrapt 3 markdown_extensions : - markdown_fenced_code_tabs : template : bootstrap3 For the same previous exemple, the generated code will be: div class = md-fenced-code-tabs id = tab-tab-group-4 ul class = nav nav-tabs li class = nav-item active a href = #tab-group-4-0_python role = tab data-toggle = tab data-lang = python Python 2 / a / li li class = nav-item a href = #tab-group-4-1_python role = tab data-toggle = tab data-lang = python Python 3 / a / li / ul div class = tab-content div id = tab-group-4-0_python class = tab-pane active role = tabpanel ... the highlighted syntax ... / div div id = tab-group-4-1_python class = tab-pane role = tabpanel ... the highlighted syntax ... / div / div / div Bootsrapt 4 markdown_extensions : - markdown_fenced_code_tabs : template : bootstrap4 This time the result will be: div class = md-fenced-code-tabs id = tab-tab-group-4 ul class = nav nav-tabs li class = nav-item a class = nav-link active href = #tab-group-4-0_c-panel role = tab id = tab-group-4-0_c-tab data-toggle = tab data-lang = c aria-controls = tab-group-4-0_c-panel aria-selected = true C / a / li li class = nav-item a class = nav-link href = #tab-group-4-1_java-panel role = tab id = tab-group-4-1_java-tab data-toggle = tab data-lang = java aria-controls = tab-group-4-1_java-panel aria-selected = false Java / a / li / ul div class = tab-content div id = tab-group-4-0_c-panel class = tab-pane show active role = tabpanel aria-labelledby = tab-group-4-0_c-tab ... the highlighted syntax ... / div div id = tab-group-4-1_java-panel class = tab-pane role = tabpanel aria-labelledby = tab-group-4-1_java-tab ... the highlighted syntax ... / div / div / div","title":"Templates"},{"location":"templates/#default","text":"The default template is dependency free and needs only CSS only to work fine.","title":"Default"},{"location":"templates/#configuration","text":"markdown_extensions : - markdown_fenced_code_tabs : template : default Here is the basic CSS that can be used. . md-fenced-code-tabs * { box-sizing : border-box ; } . md-fenced-code-tabs { display : flex ; position : relative ; flex-wrap : wrap ; width : 100 % ; } . md-fenced-code-tabs input { position : absolute ; opacity : 0 ; } . md-fenced-code-tabs label { width : auto ; padding : 4 px ; margin : 0 8 px ; cursor : pointer ; color : #aaa ; } . md-fenced-code-tabs input : checked + label { color : #333 ; } . md-fenced-code-tabs . code-tabpanel { display : none ; width : 100 % ; margin-top : 10 px ; order : 99 ; } . md-fenced-code-tabs input : checked + label + . code-tabpanel { display : block ; } . md-fenced-code-tabs pre , . md-fenced-code-tabs . codehilite { width : 100 % ; margin : 0 px ; } Tip Take a look to the code-tabs css of this current documentation","title":"Configuration"},{"location":"templates/#generated-html","text":"For each code block, the generated HTML code will be: input class = code-tab role = tab type = radio name = ${group-id} id = ${group-id}-${index}_${language-1} data-lang = ${language-1} aria-controls = ${group-id}-${index}_${language-1}-panel label class = code-tab-label for = ${group-id}-${index}_${language-1} data-lang = ${language-1} id = ${group-id}-${index}_${language-1}-label Label 1 / label div class = code-tabpanel role = tabpanel data-lang = ${language-1} id = ${group-id}-${index}_${language-1}-panel aria-labelledby = ${group-id}-${index}_${language-1}-label Code 1 / div Exemple: ``` c printf( HELLO WORLD! ); ``` ``` java System.out.println( HELLO WORLD! ); ``` Result: div class = md-fenced-code-tabs id = tab-tab-group-4 input name = tab-group-4 type = radio id = tab-group-4-0_c checked = checked class = code-tab data-lang = c aria-controls = tab-group-4-0_c-panel role = tab label for = tab-group-4-0_c class = code-tab-label data-lang = c id = tab-group-4-0_c-label C / label div class = code-tabpanel role = tabpanel data-lang = c id = tab-group-4-0_c-panel aria-labelledby = tab-group-4-0_c-label ... the highlighted syntax ... / div input name = tab-group-4 type = radio id = tab-group-4-1_java class = code-tab data-lang = java aria-controls = tab-group-4-1_java-panel role = tab label for = tab-group-4-1_java class = code-tab-label data-lang = java id = tab-group-4-1_java-label Java / label div class = code-tabpanel role = tabpanel data-lang = java id = tab-group-4-1_java-panel aria-labelledby = tab-group-4-1_java-label ... the highlighted syntax ... / div / div","title":"Generated HTML"},{"location":"templates/#bootsrapt","text":"If you're using a Bootstrap based theme, the only thing you'll need to is choosing the right template option depending on the Bootstrap version of you're theme.","title":"Bootsrapt"},{"location":"templates/#bootsrapt-3","text":"markdown_extensions : - markdown_fenced_code_tabs : template : bootstrap3 For the same previous exemple, the generated code will be: div class = md-fenced-code-tabs id = tab-tab-group-4 ul class = nav nav-tabs li class = nav-item active a href = #tab-group-4-0_python role = tab data-toggle = tab data-lang = python Python 2 / a / li li class = nav-item a href = #tab-group-4-1_python role = tab data-toggle = tab data-lang = python Python 3 / a / li / ul div class = tab-content div id = tab-group-4-0_python class = tab-pane active role = tabpanel ... the highlighted syntax ... / div div id = tab-group-4-1_python class = tab-pane role = tabpanel ... the highlighted syntax ... / div / div / div","title":"Bootsrapt 3"},{"location":"templates/#bootsrapt-4","text":"markdown_extensions : - markdown_fenced_code_tabs : template : bootstrap4 This time the result will be: div class = md-fenced-code-tabs id = tab-tab-group-4 ul class = nav nav-tabs li class = nav-item a class = nav-link active href = #tab-group-4-0_c-panel role = tab id = tab-group-4-0_c-tab data-toggle = tab data-lang = c aria-controls = tab-group-4-0_c-panel aria-selected = true C / a / li li class = nav-item a class = nav-link href = #tab-group-4-1_java-panel role = tab id = tab-group-4-1_java-tab data-toggle = tab data-lang = java aria-controls = tab-group-4-1_java-panel aria-selected = false Java / a / li / ul div class = tab-content div id = tab-group-4-0_c-panel class = tab-pane show active role = tabpanel aria-labelledby = tab-group-4-0_c-tab ... the highlighted syntax ... / div div id = tab-group-4-1_java-panel class = tab-pane role = tabpanel aria-labelledby = tab-group-4-1_java-tab ... the highlighted syntax ... / div / div / div","title":"Bootsrapt 4"}]}