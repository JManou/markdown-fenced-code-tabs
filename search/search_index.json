{
    "docs": [
        {
            "location": "/", 
            "text": "Code Tabs Extension \nDocumentation\n\n\n\n\nMigrating from an older version? Check out our \nRelease notes\n.\n\n\n\n\nOverview\n\n\nCode Tabs\n is an extension that generates a HTML structure for consecutive fenced code blocks content. It provides four features:\n\n\n\n\n The ability to choose the HTML template.\n\n\n The ability to specify custom label for a tab.\n\n\n The ability to enable tab generation for a single fenced code block.\n\n\n The ability to specify the css class for the tab active state.\n\n\n\n\nExample:\n\n\n \n``` c\nprintf(\nHELLO WORLD!\n);\n```\n\n``` java \nSystem.out.println(\nHELLO WORLD!\n);\n```\n\n``` python\nprint(\nHELLO WORLD!\n)\n```\n\n\n\nResult:\n\n\nC\nprintf\n(\nHELLO WORLD!\n);\n\n\nJava\nSystem\n.\nout\n.\nprintln\n(\nHELLO WORLD!\n);\n\n\nPython\nprint\n(\nHELLO WORLD!\n)\n\n\n\n\n\nInstallation\n\n\nInstallation is easy with pip:\n\n\n \npip install markdown-fenced-code-tabs\n\n\n\nIf you want to manually install it, run \npython setup.py build\n and \npython setup.py install\n. You should be able to access the extensions in Python Markdown.\n\n\nIf you would like to modify the code, you can install it via: \npython setup.py develop\n. This method will allow you to instantly see your changes without reinstalling.\n\n\nUsage\n\n\nIn order to enable the extension just add it to your \nmarkdown_extensions\n list:\n\n\n \nmarkdown_extensions\n:\n\n  \n-\n \nmarkdown_fenced_code_tabs\n\n\n\n\nThis will add the extension with the default \noptions\n. To configure them: \n\n\n \nmarkdown_extensions\n:\n\n  \n-\n \nmarkdown_fenced_code_tabs\n:\n\n      \nsingle_block_as_tab\n:\n \nFalse\n\n      \nactive_class\n:\n \nactive\n\n      \ntemplate\n:\n \ndefault\n\n\n\n\n\n\nImportant\n\n\nIf you choose the \ndefault\n template you wiLl have to add the needed \ncss\n as explained in the \ntemplates documentation\n. \n\n\n\n\nLabel customization\n\n\nBy default the tab label is the language of the code block but it can be customized by passing the title to the \nfct_label\n argument placed right after the language identifier.\n\n\nExample:\n\n\n \n``` python fct_label=\nPython 2\n\nprint \nBonjour\n \n```\n\n``` python fct_label=\nPython 3\n\nprint(\nBonjour\n)\n```\n\n\n\nResult:\n\n\nPython 2\nprint\n \nBonjour\n \n\nPython 3\nprint\n(\nBonjour\n)\n\n\n\n\n\nOptions\n\n\nThe following options are provided to configure the output:\n\n\n\n\n\n\n\n\nOption\n\n\nType\n\n\nDefault\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsingle_block_as_tab\n\n\nbool\n\n\nFalse\n\n\nRenders a single fenced code block as a tab.\n\n\n\n\n\n\nactive_class\n\n\nstring\n\n\nactive\n\n\nClass name is applied to the active tab.\n\n\n\n\n\n\ntemplate\n\n\nstring\n\n\ndefault\n\n\nA string that specifies which HTML template should be used \ndefault\n, \nbootstrap3\n, or \nbootstrap4\n.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/#code-tabs-extension-documentation", 
            "text": "Migrating from an older version? Check out our  Release notes .", 
            "title": "Code Tabs Extension Documentation"
        }, 
        {
            "location": "/#overview", 
            "text": "Code Tabs  is an extension that generates a HTML structure for consecutive fenced code blocks content. It provides four features:    The ability to choose the HTML template.   The ability to specify custom label for a tab.   The ability to enable tab generation for a single fenced code block.   The ability to specify the css class for the tab active state.   Example:    ``` c\nprintf( HELLO WORLD! );\n```\n\n``` java \nSystem.out.println( HELLO WORLD! );\n```\n\n``` python\nprint( HELLO WORLD! )\n```  Result:  C printf ( HELLO WORLD! );  Java System . out . println ( HELLO WORLD! );  Python print ( HELLO WORLD! )", 
            "title": "Overview"
        }, 
        {
            "location": "/#installation", 
            "text": "Installation is easy with pip:    pip install markdown-fenced-code-tabs  If you want to manually install it, run  python setup.py build  and  python setup.py install . You should be able to access the extensions in Python Markdown.  If you would like to modify the code, you can install it via:  python setup.py develop . This method will allow you to instantly see your changes without reinstalling.", 
            "title": "Installation"
        }, 
        {
            "location": "/#usage", 
            "text": "In order to enable the extension just add it to your  markdown_extensions  list:    markdown_extensions : \n   -   markdown_fenced_code_tabs   This will add the extension with the default  options . To configure them:     markdown_extensions : \n   -   markdown_fenced_code_tabs : \n       single_block_as_tab :   False \n       active_class :   active \n       template :   default    Important  If you choose the  default  template you wiLl have to add the needed  css  as explained in the  templates documentation .", 
            "title": "Usage"
        }, 
        {
            "location": "/#label-customization", 
            "text": "By default the tab label is the language of the code block but it can be customized by passing the title to the  fct_label  argument placed right after the language identifier.  Example:    ``` python fct_label= Python 2 \nprint  Bonjour  \n```\n\n``` python fct_label= Python 3 \nprint( Bonjour )\n```  Result:  Python 2 print   Bonjour   Python 3 print ( Bonjour )", 
            "title": "Label customization"
        }, 
        {
            "location": "/#options", 
            "text": "The following options are provided to configure the output:     Option  Type  Default  Description      single_block_as_tab  bool  False  Renders a single fenced code block as a tab.    active_class  string  active  Class name is applied to the active tab.    template  string  default  A string that specifies which HTML template should be used  default ,  bootstrap3 , or  bootstrap4 .", 
            "title": "Options"
        }, 
        {
            "location": "/templates/", 
            "text": "The \nCode Tabs\n extension allows you to choose one of the following three rendering templates.\n\n\nDefault\n\n\nThe default template is dependency free and needs only CSS only to work fine.\n\n\nConfiguration\n\n\n \nmarkdown_extensions\n:\n\n  \n-\n \nmarkdown_fenced_code_tabs\n:\n\n      \ntemplate\n:\n \ndefault\n\n\n\n\nHere is the basic CSS that can be used.\n\n\n \n.\nmd-fenced-code-tabs\n \n*\n \n{\n\n    \nbox-sizing\n:\n \nborder-box\n;\n\n\n}\n\n\n\n.\nmd-fenced-code-tabs\n \n{\n\n    \ndisplay\n:\n \nflex\n;\n\n    \nposition\n:\n \nrelative\n;\n\n    \nflex-wrap\n:\n \nwrap\n;\n\n    \nwidth\n:\n \n100\n%\n;\n\n\n}\n\n\n\n.\nmd-fenced-code-tabs\n \ninput\n \n{\n\n    \nposition\n:\n \nabsolute\n;\n\n    \nopacity\n:\n \n0\n;\n\n\n}\n\n\n\n.\nmd-fenced-code-tabs\n \nlabel\n \n{\n\n    \nwidth\n:\n \nauto\n;\n\n    \npadding\n:\n \n4\npx\n;\n\n    \nmargin\n:\n \n0\n \n8\npx\n;\n\n    \ncursor\n:\n \npointer\n;\n\n    \ncolor\n:\n \n#aaa\n;\n\n\n}\n\n\n\n.\nmd-fenced-code-tabs\n \ninput\n:\nchecked\n \n+\n \nlabel\n \n{\n\n    \ncolor\n:\n \n#333\n;\n\n\n}\n\n\n\n.\nmd-fenced-code-tabs\n \n.\ncode-tabpanel\n \n{\n\n    \ndisplay\n:\n \nnone\n;\n\n    \nwidth\n:\n \n100\n%\n;\n\n    \nmargin-top\n:\n \n10\npx\n;\n\n    \norder\n:\n \n99\n;\n\n\n}\n\n\n\n.\nmd-fenced-code-tabs\n \ninput\n:\nchecked\n \n+\n \nlabel\n \n+\n \n.\ncode-tabpanel\n \n{\n\n    \ndisplay\n:\n \nblock\n;\n\n\n}\n\n\n\n.\nmd-fenced-code-tabs\n \npre\n,\n\n\n.\nmd-fenced-code-tabs\n \n.\ncodehilite\n \n{\n\n    \nwidth\n:\n \n100\n%\n;\n\n    \nmargin\n:\n \n0\npx\n;\n\n\n}\n\n\n\n\n\n\nTip\n\n\nTake a look to the \ncode-tabs css\n of this current documentation \n\n\n\n\nGenerated HTML\n\n\nFor each code block, the generated HTML code will be:\n\n\n \ninput\n \nclass\n=\ncode-tab\n\n       \nrole\n=\ntab\n\n       \ntype\n=\nradio\n \n       \nname\n=\n${group-id}\n \n       \nid\n=\n${group-id}-${index}_${language-1}\n \n       \ndata-lang\n=\n${language-1}\n \n       \naria-controls\n=\n${group-id}-${index}_${language-1}-panel\n\n\n\nlabel\n \nclass\n=\ncode-tab-label\n\n       \nfor\n=\n${group-id}-${index}_${language-1}\n \n       \ndata-lang\n=\n${language-1}\n \n       \nid\n=\n${group-id}-${index}_${language-1}-label\nLabel 1\n/\nlabel\n\n\n\ndiv\n \nclass\n=\ncode-tabpanel\n \n     \nrole\n=\ntabpanel\n \n     \ndata-lang\n=\n${language-1}\n \n     \nid\n=\n${group-id}-${index}_${language-1}-panel\n \n     \naria-labelledby\n=\n${group-id}-${index}_${language-1}-label\nCode 1\n/\ndiv\n\n\n\n\nExemple: \n\n\n \n``` c\nprintf(\nHELLO WORLD!\n);\n```\n\n``` java \nSystem.out.println(\nHELLO WORLD!\n);\n```\n\n\n\nResult:\n\n\n \ndiv\n \nclass\n=\nmd-fenced-code-tabs\n \nid\n=\ntab-tab-group-4\n\n    \ninput\n \nname\n=\ntab-group-4\n \ntype\n=\nradio\n \nid\n=\ntab-group-4-0_c\n \nchecked\n=\nchecked\n \nclass\n=\ncode-tab\n \ndata-lang\n=\nc\n \naria-controls\n=\ntab-group-4-0_c-panel\n \nrole\n=\ntab\n\n    \nlabel\n \nfor\n=\ntab-group-4-0_c\n \nclass\n=\ncode-tab-label\n \ndata-lang\n=\nc\n \nid\n=\ntab-group-4-0_c-label\nC\n/\nlabel\n\n    \ndiv\n \nclass\n=\ncode-tabpanel\n \nrole\n=\ntabpanel\n \ndata-lang\n=\nc\n \nid\n=\ntab-group-4-0_c-panel\n \naria-labelledby\n=\ntab-group-4-0_c-label\n\n        ... the highlighted syntax ...\n    \n/\ndiv\n\n    \ninput\n \nname\n=\ntab-group-4\n \ntype\n=\nradio\n \nid\n=\ntab-group-4-1_java\n \nclass\n=\ncode-tab\n \ndata-lang\n=\njava\n \naria-controls\n=\ntab-group-4-1_java-panel\n \nrole\n=\ntab\n\n    \nlabel\n \nfor\n=\ntab-group-4-1_java\n \nclass\n=\ncode-tab-label\n \ndata-lang\n=\njava\n \nid\n=\ntab-group-4-1_java-label\nJava\n/\nlabel\n\n    \ndiv\n \nclass\n=\ncode-tabpanel\n \nrole\n=\ntabpanel\n \ndata-lang\n=\njava\n \nid\n=\ntab-group-4-1_java-panel\n \naria-labelledby\n=\ntab-group-4-1_java-label\n\n        ... the highlighted syntax ...\n    \n/\ndiv\n\n\n/\ndiv\n\n\n\n\nBootsrapt\n\n\nIf you're using a Bootstrap based theme, the only thing you'll need to is choosing the right template option depending on the Bootstrap version of you're theme.\n\n\nBootsrapt 3\n\n\n \nmarkdown_extensions\n:\n\n  \n-\n \nmarkdown_fenced_code_tabs\n:\n\n      \ntemplate\n:\n \nbootstrap3\n\n\n\n\nFor the same previous exemple, the generated code will be:\n\n\n \ndiv\n \nclass\n=\nmd-fenced-code-tabs\n \nid\n=\ntab-tab-group-4\n\n    \nul\n \nclass\n=\nnav nav-tabs\n\n        \nli\n \nclass\n=\nnav-item active\na\n \nhref\n=\n#tab-group-4-0_python\n \nrole\n=\ntab\n \ndata-toggle\n=\ntab\n \ndata-lang\n=\npython\nPython 2\n/\na\n\n        \n/\nli\n\n        \nli\n \nclass\n=\nnav-item\na\n \nhref\n=\n#tab-group-4-1_python\n \nrole\n=\ntab\n \ndata-toggle\n=\ntab\n \ndata-lang\n=\npython\nPython 3\n/\na\n\n        \n/\nli\n\n    \n/\nul\n\n    \ndiv\n \nclass\n=\ntab-content\n\n        \ndiv\n \nid\n=\ntab-group-4-0_python\n \nclass\n=\ntab-pane active\n \nrole\n=\ntabpanel\n\n            ... the highlighted syntax ...\n        \n/\ndiv\n\n        \ndiv\n \nid\n=\ntab-group-4-1_python\n \nclass\n=\ntab-pane\n \nrole\n=\ntabpanel\n\n        ... the highlighted syntax ...\n        \n/\ndiv\n\n    \n/\ndiv\n\n\n/\ndiv\n\n\n\n\nBootsrapt 4\n\n\n \nmarkdown_extensions\n:\n\n  \n-\n \nmarkdown_fenced_code_tabs\n:\n\n      \ntemplate\n:\n \nbootstrap4\n\n\n\n\nThis time the result will be:\n\n\n \ndiv\n \nclass\n=\nmd-fenced-code-tabs\n \nid\n=\ntab-tab-group-4\n\n    \nul\n \nclass\n=\nnav nav-tabs\n\n        \nli\n \nclass\n=\nnav-item\na\n \nclass\n=\nnav-link active\n \nhref\n=\n#tab-group-4-0_c-panel\n \nrole\n=\ntab\n \nid\n=\ntab-group-4-0_c-tab\n \ndata-toggle\n=\ntab\n \ndata-lang\n=\nc\n \naria-controls\n=\ntab-group-4-0_c-panel\n \naria-selected\n=\ntrue\nC\n/\na\n\n        \n/\nli\n\n        \nli\n \nclass\n=\nnav-item\na\n \nclass\n=\nnav-link \n \nhref\n=\n#tab-group-4-1_java-panel\n \nrole\n=\ntab\n \nid\n=\ntab-group-4-1_java-tab\n \ndata-toggle\n=\ntab\n \ndata-lang\n=\njava\n \naria-controls\n=\ntab-group-4-1_java-panel\n \naria-selected\n=\nfalse\nJava\n/\na\n\n        \n/\nli\n\n    \n/\nul\n\n    \ndiv\n \nclass\n=\ntab-content\n\n        \ndiv\n \nid\n=\ntab-group-4-0_c-panel\n \nclass\n=\ntab-pane show active\n \nrole\n=\ntabpanel\n \naria-labelledby\n=\ntab-group-4-0_c-tab\n\n            ... the highlighted syntax ...\n        \n/\ndiv\n\n        \ndiv\n \nid\n=\ntab-group-4-1_java-panel\n \nclass\n=\ntab-pane \n \nrole\n=\ntabpanel\n \naria-labelledby\n=\ntab-group-4-1_java-tab\n\n            ... the highlighted syntax ...\n        \n/\ndiv\n\n    \n/\ndiv\n\n\n/\ndiv", 
            "title": "Templates"
        }, 
        {
            "location": "/templates/#default", 
            "text": "The default template is dependency free and needs only CSS only to work fine.", 
            "title": "Default"
        }, 
        {
            "location": "/templates/#configuration", 
            "text": "markdown_extensions : \n   -   markdown_fenced_code_tabs : \n       template :   default   Here is the basic CSS that can be used.    . md-fenced-code-tabs   *   { \n     box-sizing :   border-box ;  }  . md-fenced-code-tabs   { \n     display :   flex ; \n     position :   relative ; \n     flex-wrap :   wrap ; \n     width :   100 % ;  }  . md-fenced-code-tabs   input   { \n     position :   absolute ; \n     opacity :   0 ;  }  . md-fenced-code-tabs   label   { \n     width :   auto ; \n     padding :   4 px ; \n     margin :   0   8 px ; \n     cursor :   pointer ; \n     color :   #aaa ;  }  . md-fenced-code-tabs   input : checked   +   label   { \n     color :   #333 ;  }  . md-fenced-code-tabs   . code-tabpanel   { \n     display :   none ; \n     width :   100 % ; \n     margin-top :   10 px ; \n     order :   99 ;  }  . md-fenced-code-tabs   input : checked   +   label   +   . code-tabpanel   { \n     display :   block ;  }  . md-fenced-code-tabs   pre ,  . md-fenced-code-tabs   . codehilite   { \n     width :   100 % ; \n     margin :   0 px ;  }    Tip  Take a look to the  code-tabs css  of this current documentation", 
            "title": "Configuration"
        }, 
        {
            "location": "/templates/#generated-html", 
            "text": "For each code block, the generated HTML code will be:    input   class = code-tab \n        role = tab \n        type = radio  \n        name = ${group-id}  \n        id = ${group-id}-${index}_${language-1}  \n        data-lang = ${language-1}  \n        aria-controls = ${group-id}-${index}_${language-1}-panel  label   class = code-tab-label \n        for = ${group-id}-${index}_${language-1}  \n        data-lang = ${language-1}  \n        id = ${group-id}-${index}_${language-1}-label Label 1 / label  div   class = code-tabpanel  \n      role = tabpanel  \n      data-lang = ${language-1}  \n      id = ${group-id}-${index}_${language-1}-panel  \n      aria-labelledby = ${group-id}-${index}_${language-1}-label Code 1 / div   Exemple:     ``` c\nprintf( HELLO WORLD! );\n```\n\n``` java \nSystem.out.println( HELLO WORLD! );\n```  Result:    div   class = md-fenced-code-tabs   id = tab-tab-group-4 \n     input   name = tab-group-4   type = radio   id = tab-group-4-0_c   checked = checked   class = code-tab   data-lang = c   aria-controls = tab-group-4-0_c-panel   role = tab \n     label   for = tab-group-4-0_c   class = code-tab-label   data-lang = c   id = tab-group-4-0_c-label C / label \n     div   class = code-tabpanel   role = tabpanel   data-lang = c   id = tab-group-4-0_c-panel   aria-labelledby = tab-group-4-0_c-label \n        ... the highlighted syntax ...\n     / div \n     input   name = tab-group-4   type = radio   id = tab-group-4-1_java   class = code-tab   data-lang = java   aria-controls = tab-group-4-1_java-panel   role = tab \n     label   for = tab-group-4-1_java   class = code-tab-label   data-lang = java   id = tab-group-4-1_java-label Java / label \n     div   class = code-tabpanel   role = tabpanel   data-lang = java   id = tab-group-4-1_java-panel   aria-labelledby = tab-group-4-1_java-label \n        ... the highlighted syntax ...\n     / div  / div", 
            "title": "Generated HTML"
        }, 
        {
            "location": "/templates/#bootsrapt", 
            "text": "If you're using a Bootstrap based theme, the only thing you'll need to is choosing the right template option depending on the Bootstrap version of you're theme.", 
            "title": "Bootsrapt"
        }, 
        {
            "location": "/templates/#bootsrapt-3", 
            "text": "markdown_extensions : \n   -   markdown_fenced_code_tabs : \n       template :   bootstrap3   For the same previous exemple, the generated code will be:    div   class = md-fenced-code-tabs   id = tab-tab-group-4 \n     ul   class = nav nav-tabs \n         li   class = nav-item active a   href = #tab-group-4-0_python   role = tab   data-toggle = tab   data-lang = python Python 2 / a \n         / li \n         li   class = nav-item a   href = #tab-group-4-1_python   role = tab   data-toggle = tab   data-lang = python Python 3 / a \n         / li \n     / ul \n     div   class = tab-content \n         div   id = tab-group-4-0_python   class = tab-pane active   role = tabpanel \n            ... the highlighted syntax ...\n         / div \n         div   id = tab-group-4-1_python   class = tab-pane   role = tabpanel \n        ... the highlighted syntax ...\n         / div \n     / div  / div", 
            "title": "Bootsrapt 3"
        }, 
        {
            "location": "/templates/#bootsrapt-4", 
            "text": "markdown_extensions : \n   -   markdown_fenced_code_tabs : \n       template :   bootstrap4   This time the result will be:    div   class = md-fenced-code-tabs   id = tab-tab-group-4 \n     ul   class = nav nav-tabs \n         li   class = nav-item a   class = nav-link active   href = #tab-group-4-0_c-panel   role = tab   id = tab-group-4-0_c-tab   data-toggle = tab   data-lang = c   aria-controls = tab-group-4-0_c-panel   aria-selected = true C / a \n         / li \n         li   class = nav-item a   class = nav-link    href = #tab-group-4-1_java-panel   role = tab   id = tab-group-4-1_java-tab   data-toggle = tab   data-lang = java   aria-controls = tab-group-4-1_java-panel   aria-selected = false Java / a \n         / li \n     / ul \n     div   class = tab-content \n         div   id = tab-group-4-0_c-panel   class = tab-pane show active   role = tabpanel   aria-labelledby = tab-group-4-0_c-tab \n            ... the highlighted syntax ...\n         / div \n         div   id = tab-group-4-1_java-panel   class = tab-pane    role = tabpanel   aria-labelledby = tab-group-4-1_java-tab \n            ... the highlighted syntax ...\n         / div \n     / div  / div", 
            "title": "Bootsrapt 4"
        }, 
        {
            "location": "/release-notes/", 
            "text": "Upgrading\n\n\nTo upgrade Code Tabs to the latest version, use \npip\n:\n\n\n \npip install --upgrade markdown-fenced-code-tabs\n\n\n\nTo inspect the currently installed version, use the following command:\n\n\n \npip show markdown-fenced-code-tabs\n\n\n\nCode Tabs 0.x to 1.x\n\n\n\n\nThe 0.x generates exclusively a \nBootstrap 3\n based template. Starting from the 1.x, you can \nchoose the rendering template\n.\n\n\n\n\nTo keep everything working smoothly, you need to choose the \nbootstrap3\n template: \n\n\n \nmarkdown_extensions\n:\n\n  \n-\n \nmarkdown_fenced_code_tabs\n:\n\n      \ntemplate\n:\n \nbootstrap3\n\n\n\n\nChangelog\n\n\n1.0.3 \n_ May 27, 2018\n\n\n\n\nAvoid adding the \ndiv class=\nmd-fenced-code-tabs\n/div\n structure for single code blocks if the \nsingle_block_as_tab\n option is \nTrue\n.\n\n\n\n\n1.0.2 \n_ May 27, 2018\n\n\n\n\nFIX\n: Fixed the Bootsrap templates\n\n\n\n\n1.0.1 \n_ May 25, 2018\n\n\n\n\nFIX\n: Fixed the missing resources\n\n\n\n\n1.0.0 \n_ May 25, 2018\n\n\n\n\nNEW\n: Added the \nactive_class\n option support in the configuration\n\n\nNEW\n: Added the \ntemplate\n option support in the configuration\n\n\nFIX\n: Fixed the tab id issue for code blocks with same language #12\n\n\n\n\n0.2.0 \n_ June 16, 2017\n\n\n\n\nAdded the custom tab label option\n\n\nFixed the missing \nactive\n class of the first tab\n\n\nFixed the missing \nstring\n import\n\n\n\n\n0.1.0 \n_ March 1, 2017\n\n\n\n\nInitial release", 
            "title": "Release Notes"
        }, 
        {
            "location": "/release-notes/#upgrading", 
            "text": "To upgrade Code Tabs to the latest version, use  pip :    pip install --upgrade markdown-fenced-code-tabs  To inspect the currently installed version, use the following command:    pip show markdown-fenced-code-tabs", 
            "title": "Upgrading"
        }, 
        {
            "location": "/release-notes/#code-tabs-0x-to-1x", 
            "text": "The 0.x generates exclusively a  Bootstrap 3  based template. Starting from the 1.x, you can  choose the rendering template .   To keep everything working smoothly, you need to choose the  bootstrap3  template:     markdown_extensions : \n   -   markdown_fenced_code_tabs : \n       template :   bootstrap3", 
            "title": "Code Tabs 0.x to 1.x"
        }, 
        {
            "location": "/release-notes/#changelog", 
            "text": "", 
            "title": "Changelog"
        }, 
        {
            "location": "/release-notes/#103-_-may-27-2018", 
            "text": "Avoid adding the  div class= md-fenced-code-tabs /div  structure for single code blocks if the  single_block_as_tab  option is  True .", 
            "title": "1.0.3 _ May 27, 2018"
        }, 
        {
            "location": "/release-notes/#102-_-may-27-2018", 
            "text": "FIX : Fixed the Bootsrap templates", 
            "title": "1.0.2 _ May 27, 2018"
        }, 
        {
            "location": "/release-notes/#101-_-may-25-2018", 
            "text": "FIX : Fixed the missing resources", 
            "title": "1.0.1 _ May 25, 2018"
        }, 
        {
            "location": "/release-notes/#100-_-may-25-2018", 
            "text": "NEW : Added the  active_class  option support in the configuration  NEW : Added the  template  option support in the configuration  FIX : Fixed the tab id issue for code blocks with same language #12", 
            "title": "1.0.0 _ May 25, 2018"
        }, 
        {
            "location": "/release-notes/#020-_-june-16-2017", 
            "text": "Added the custom tab label option  Fixed the missing  active  class of the first tab  Fixed the missing  string  import", 
            "title": "0.2.0 _ June 16, 2017"
        }, 
        {
            "location": "/release-notes/#010-_-march-1-2017", 
            "text": "Initial release", 
            "title": "0.1.0 _ March 1, 2017"
        }, 
        {
            "location": "/contributing/", 
            "text": "First off, thanks for taking the time to contribute! \n It's people like you that make the open source community such a great community! \ud83d\ude0a\n\n\nAny type of contribution is welcome, not only code. You can help with \n\n\n\n\nQA\n: file bug reports, the more details you can give the better (e.g. screenshots with the console open)\n\n\nCode\n: take a look at the \nopen issues\n. Even if you can't write code, commenting on them, showing that you care about a given issue matters. It helps us triage them.\n\n\n\n\nYour First Contribution\n\n\nWorking on your first Pull Request? You can learn how from this \nfree\n series, \nHow to Contribute to an Open Source Project on GitHub\n.\n\n\nSubmitting code\n\n\nAny code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.\n\n\nCode review process\n\n\nThe bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge.\nIt is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?\n\n\nQuestions\n\n\nIf you have any questions or found a bug in the source code, create an \nissue\n (protip: do a quick search first to see if someone else didn't ask the same question before!).", 
            "title": "Contributing & Support"
        }, 
        {
            "location": "/contributing/#your-first-contribution", 
            "text": "Working on your first Pull Request? You can learn how from this  free  series,  How to Contribute to an Open Source Project on GitHub .", 
            "title": "Your First Contribution"
        }, 
        {
            "location": "/contributing/#submitting-code", 
            "text": "Any code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.", 
            "title": "Submitting code"
        }, 
        {
            "location": "/contributing/#code-review-process", 
            "text": "The bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge.\nIt is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?", 
            "title": "Code review process"
        }, 
        {
            "location": "/contributing/#questions", 
            "text": "If you have any questions or found a bug in the source code, create an  issue  (protip: do a quick search first to see if someone else didn't ask the same question before!).", 
            "title": "Questions"
        }, 
        {
            "location": "/licence/", 
            "text": "MIT License\n\n\nCopyright \u00a9 2017-present \nYassir Barchi\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.", 
            "title": "Licence"
        }
    ]
}